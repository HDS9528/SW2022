Imports System.Reflection
Imports System.Runtime.InteropServices

' 这段注释说明了有关程序集的一般信息是通过下面一系列的属性集来进行控制的。
' 通过更改这些属性的值，就能够对与程序集相关的各类信息做出修改。
' 例如程序集的标题、描述、所属公司、产品名称、版权信息、商标信息等都可以通过对应的属性来设置。
' 有关程序集的一般信息通过以下 
' 属性集进行控制。更改这些属性值可修改与程序集相关的信息。

' 以下是一系列用于设置程序集不同属性的特性（Attribute）声明。
' 这些特性会在程序集被编译和使用时，为程序集添加相应的元数据信息。

' 设置程序集的标题属性。这里为空字符串，表示当前未设置具体的标题。
' 当在其他地方（如资源管理器中查看程序集文件属性等情况）可能会显示该标题信息。
<Assembly: AssemblyTitle("")>

' 设置程序集的描述属性。同样为空字符串，若有需要，可以在此处填写关于程序集功能、用途等方面的描述内容，
' 以便于其他人在了解该程序集时能获取更详细的信息。
<Assembly: AssemblyDescription("")>

' 设置程序集所属公司的属性。为空字符串，可填入开发该程序集的公司名称等相关信息。
<Assembly: AssemblyCompany("")>

' 设置程序集对应的产品名称属性。当前为空，可明确该程序集是属于哪个具体产品的一部分等情况。
<Assembly: AssemblyProduct("")>

' 设置程序集的版权信息属性。空白状态，应填入如版权所有者、版权声明等相关的版权方面的内容。
<Assembly: AssemblyCopyright("")>

' 设置程序集的商标信息属性。这里也未设置具体内容，如有相关商标信息可在此处注明。
<Assembly: AssemblyTrademark("")>



' 下面这段注释是在解释程序集的版本信息构成以及如何指定这些版本信息。
' 程序集的版本信息由以下四个值组成： 
' 
' 主版本：通常表示程序集的重大更新或主要功能的改变等情况，版本号递增时一般意味着有较大的功能变动。
' 次版本：一般用于表示相对主版本较小一些的功能更新、改进或修复等情况。
' 内部版本号：可以用于表示在特定开发阶段内的构建次数等，比如每次内部测试构建可能会更新该编号。
' 修订版本号：常用于表示对程序集进行的细微修改、错误修复等情况，每修复一个小问题可能就会更新该编号。
' 
' 您可以指定所有值，也可以使用 '*' 默认内部版本号和修订版本号 
' ，如下所示：

' 使用了一种简便的方式来指定程序集版本。这里指定主版本为1，次版本为0，
' 而对于内部版本号和修订版本号则使用了'*'，这意味着编译器会自动为这两个值生成合适的编号，
' 通常是基于编译的时间戳等信息来生成，这样可以确保每次构建程序集时，内部版本号和修订版本号能有相应的变化，
' 方便区分不同时间构建的程序集版本。
<Assembly: AssemblyVersion("1.0.*")>

' 设置程序集的COM可见性属性为True。这表示该程序集将对COM（Component Object Model，组件对象模型）
' 客户端是可见的，即COM客户端可以访问该程序集中公开的类型和成员等，以便进行COM相关的交互操作。
<Assembly: ComVisibleAttribute(True)>